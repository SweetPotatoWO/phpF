<?php

namespace Service\Connect\Model;

use GraphAware\Neo4j\OGM\Annotations as OGM;

/**
 *熟悉行业关系实体模型
 * @OGM\RelationshipEntity(type="GOOD_AT")
 */
class ConnectGoodatModel extends BaseGraphModel
{
    /**
     * 关系标签
     * @var string
     */
    const TypeRelation = 'GOOD_AT';

    //region property
    /**
     * @var int
     *
     * @OGM\GraphId()
     */
    protected $id;
    /**
     * 来源节点-个人
     * @OGM\StartNode(targetEntity="PersonModel")
     * @var PersonModel
     */
    protected $person = null;
    /**
     * 目标节点-行业
     * @OGM\EndNode(targetEntity="IndustryModel")
     * @var IndustryModel
     */
    protected $industry = null;

    public function __construct(PersonModel $person, IndustryModel $industry)
    {
        $this->person = $person;
        $this->industry = $industry;
    }

    /**
     * @return int
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * @return PersonModel
     */
    public function getPerson()
    {
        return $this->person;
    }

    /**
     * @return IndustryModel
     */
    public function getIndustry()
    {
        return $this->industry;
    }
    //endregion


    //region function
    /**
     * 获取实体编辑参数串和参数
     * @param string $alias
     * @param array $ignore 不需要获取的字段（一般指查询字段）
     * @return array
     */
    public function getEditParam($alias='r',$ignore=[])
    {
        return $this->getSetArray('',$alias,$ignore);
    }

    /**
     * @return array
     */
    public function getUpsertQuery()
    {
        $from = $this->getPerson();
        $to = $this->getIndustry();
        $dir_1='-';
        $dir_2='->';
        $param = [];
        $q = "MERGE (n:Person{user_id:".$from->getUserId()."})";
        $param_from = $from->getEditParam();
        if($param_from){
            $q .="
            ON CREATE SET ".$param_from['query']."
            ON MATCH SET ".$param_from['query'];
            $param = array_merge($param,$param_from['param']);
        }
        $q .= "MERGE (m:Industry{industry_id:".$to->getIndId()."})";
        $param_to = $to->getEditParam('m');
        if($param_to){
            $q .="
            ON CREATE SET ".$param_to['query']."
            ON MATCH SET ".$param_to['query'];
            $param = array_merge($param,$param_to['param']);
        }
        $q .= "MERGE (n)".$dir_1."[r:".self::TypeRelation."]$dir_2(m)";
        $param_conn = $this->getEditParam();
        if($param_conn) {
            $q .= "
            ON CREATE SET " . $param_conn['query'] . "
            ON MATCH SET " . $param_conn['query'];
            $param = array_merge($param,$param_conn['param']);
        }
        return [
            'query'=>$q,
            'param'=>$param
        ];
    }
    //endregion
}