<?php
/**
 * Created by PhpStorm.
 * User: zhoull
 * Date: 2018/8/15
 * Time: 10:38
 */

namespace Service\Connect\Logic;

use Common\Common\GraphDbHelper;
use Common\Common\Redis;
use Service\Connect\ConnectConst;

class DataCleanLogic
{
    private $db_handler=null;
    function __construct()
    {
        $this->db_handler=GraphDbHelper::getInstance();
    }
    #region 调试用
    /**
     * 同步字符串信息对应的ID 如城市编号、行业编号
     */
    public function str2ID()
    {
        $db = M();
        //城市
        $list = $this->db_handler->query("match (n:Person) return distinct n.city as city;");
        $citys=[];
        foreach ($list as $item) {
            $citys[] = $item['city'];
        }
        unset($list);
        $q = "match (n:Person{city:'%s'}) set n.city_id=%d;";
        $list = $db->query("select regionID,name from d_sys_region where name in('".implode("','",$citys)."')");
        foreach ($list as $item) {
            $this->db_handler->execute(sprintf($q,$item['name'],$item['regionID']));
        }
        //籍贯
        $list = $this->db_handler->query("match (n:Person) return distinct n.city_born as city;");
        $citys=[];
        foreach ($list as $item) {
            $citys[] = $item['city'];
        }
        unset($list);
        $q = "match (n:Person{city_born:'%s'}) set n.city_born_id=%d;";
        $list = $db->query("select regionID,name from d_sys_region where name in('".implode("','",$citys)."')");
        foreach ($list as $item) {
            $this->db_handler->execute(sprintf($q,$item['name'],$item['regionID']));
        }
        //行业
        $list = $this->db_handler->query("match (n:Person) return distinct n.industry as industry;");
        $indus=[];
        foreach ($list as $item) {
            $indus[] = $item['industry'];
        }
        unset($list);
        $q = "match (n:Person{industry:'%s'}) set n.industry_id=%d;";
        $list = $db->query("select majobID,jobname from d_sys_majob where jobname in('".implode("','",$indus)."')");
        foreach ($list as $item) {
            $this->db_handler->execute(sprintf($q,$item['jobname'],$item['majobID']));
        }
    }

    /**
     * 同步关系数据库和图数据库的通讯录好友
     * @param $user_id
     */
    public function synMaillist($user_id){
        $db = M();
        $lst_mail = $db->query("select userName,'group',phone from d_user_maillist WHERE userID=$user_id");
        $lst_graph = $this->db_handler->query("match (n:Person{user_id:$user_id})-[r:CONTACT]->(m:Person) return m.mobile as phone;");
        $lst_mail2 = array_column($lst_mail,'phone');
        $lst_graph2 = array_column($lst_graph,'phone');
        $lst_add = array_diff($lst_mail2,$lst_graph2);
        $lst_del = array_diff($lst_graph2,$lst_mail2);
        /*echo '<h1>新增号码：</h1>';
        var_dump($lst_add);
        echo '<h1>减少号码：</h1>';
        var_dump($lst_del);*/

        foreach ($lst_add as $item) {
            $this->db_handler->query("merge (n:Person{user_id:$user_id}),(m:Person{mobile:'$item'})
            merge (n)-[r:CONTACT]->(m);");
        }
        foreach ($lst_del as $item) {
            $this->db_handler->query("match (n:Person{user_id:$user_id})-[r:CONTACT]->(m:Person{mobile:'$item'})
            where m.user_id is null
            optional match p=(()--(m))
            with r,m,count(p) as c
            with r,case when c>1 then null else m end as m
            delete r,m;");
        }
    }
    #endregion

    #region 正式用
    /**
     * 同步活跃度
     * @return bool
     */
    public function synActive()
    {
        $Redis = Redis::GetInstance();
        $Redis->select(1);
        $key_prev = "activity_";
        $keys = $Redis->getKeys($key_prev);
        $list = [];
        logger_task('DataCleanLogic/synActive', json_encode($keys), '');
        if($keys){
            foreach ($keys as $key) {
                $arr = explode('_',$key);
                $user_id = $arr[count($arr)-1];
                if($user_id){
                    $val = $Redis->get($key);
                    if(!$val)continue;
                    $info['user_id']=$user_id;
                    $info['active']=$val;
                    $list[] = $info;
                    $Redis->del($key);
                }
            }
        }
        $logic = new ConnectRelationLogic();
        return $logic->batchUpsertActive($list);
    }

    /**
     * 删除多余的名片关系
     */
    public function delCardRelation()
    {
        $lst_graph = $this->db_handler->query("match (n:Person)-[r:".ConnectConst::LBL_Card."]->(m:Person) return n.user_id as user_id,m.mobile as mobile;");
        $db = M();
        foreach ($lst_graph as $item) {
            $info = $db->query("select 1 from d_user_card where userID=".$item['user_id']." and phoneOne='".$item['mobile']."'")[0];
            if(!$info) {
//                echo $item['user_id'].'-'.$item['mobile'].":";
//                echo json_encode($info, JSON_UNESCAPED_UNICODE);
//                echo PHP_EOL;
                $this->db_handler->query("match (n:Person{user_id:".$item['user_id']."})-[r:".ConnectConst::LBL_Card."]->(m:Person{mobile:'".$item['mobile']."'})
                delete r;");
            }
        }
    }

    /**
     * 同步行业标签
     */
    public function synLabelIndustry()
    {
        $db = M();
        //感兴趣
        $lst_enjoy = $db->query("select a.*,b.parentID from d_user_wanttag a INNER JOIN d_sys_majob b on a.tagID=b.majobID order by userID");
        $param = [
            'user_id'=>0,
            'tags'=>null
        ];
        $connect_logic = new ConnectRelationLogic();
        foreach ($lst_enjoy as $item) {
            if($param['user_id']!=$item['userID']){
                if($param['tags'] && $param['user_id']){
                    $connect_logic->upsertIndustry($param['user_id'],$param['tags'],1);
                    $param['tags']=null;
                }
            }
            $param['user_id']=item['userID'];
            $param['tags'][]=[
                'indstry_id'=>$item['tagID'],
                'indstry_name'=>$item['tagName'],
                'parent_id'=>$item['parentID']
            ];
        }
        if($param['tags'] && $param['user_id']){
            $connect_logic->upsertIndustry($param['user_id'],$param['tags'],1);
            $param['tags']=null;
        }
        //熟悉
        $lst_goodat = $db->query("select a.*,b.parentID from d_user_tag a INNER JOIN d_sys_majob b on a.tagID=b.majobID order by userID");
        $param = [
            'user_id'=>0,
            'tags'=>null
        ];
        foreach ($lst_goodat as $item) {
            if($param['user_id']!=$item['userID']){
                if($param['tags'] && $param['user_id']){
                    $connect_logic->upsertIndustry($param['user_id'],$param['tags'],2);
                    $param['tags']=null;
                }
            }
            $param['user_id']=item['userID'];
            $param['tags'][]=[
                'indstry_id'=>$item['tagID'],
                'indstry_name'=>$item['tagName'],
                'parent_id'=>$item['parentID']
            ];
        }
        if($param['tags'] && $param['user_id']){
            $connect_logic->upsertIndustry($param['user_id'],$param['tags'],2);
            $param['tags']=null;
        }
        echo 'SUCCESS';
    }
    #endregion
}